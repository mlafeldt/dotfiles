# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Don't put duplicate lines in the history
HISTCONTROL=ignoredups:ignorespace

# Append to the history file, don't overwrite it
shopt -s histappend

# Set history length
HISTSIZE=1000
HISTFILESIZE=2000

# Check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

export CLICOLOR=1
export EDITOR=vim
export HOMEBREW_PREFIX=$(brew --prefix)
export GITHUB_USER=mlafeldt

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Enable bash completion
if [ -f "$HOMEBREW_PREFIX/etc/bash_completion" ]; then
    . "$HOMEBREW_PREFIX/etc/bash_completion"
fi

# Go
if command -v go >/dev/null; then
    export GOPATH="$HOME/devel/go"
    export GOROOT="$(go env GOROOT)"
    export PATH="$GOPATH/bin:$GOROOT/bin:$PATH"

    gopath() {
        dir=$(
            cd "$GOPATH/src"
            cd "$(ls -d */*/* | selecta -s "$GITHUB_USER")"
            pwd
        ) && cd "$dir"
    }
fi

# Rust
if command -v cargo >/dev/null; then
    export PATH="$HOME/.cargo/bin:$PATH"
    export OPENSSL_INCLUDE_DIR="$HOMEBREW_PREFIX/opt/openssl/include"
    export OPENSSL_LIB_DIR="$HOMEBREW_PREFIX/opt/openssl/lib"
fi

# AWS
if command -v awsenv >/dev/null; then
    awsunlock() {
        awsenv unlock --timeout=0
    }

    awsconsole() {
        url="$(awsenv console "${1:-mlafeldt}")"
        if test $? = 0; then
            open "$url"
        fi
    }

    awsshell() {
        vars="$(awsenv shell "${1:-mlafeldt}")"
        if test $? = 0; then
            eval "$vars"
        fi
    }
fi

# Use GNU utils
PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"

# Set up gpg agent for use with git
if command -v gpg-agent >/dev/null; then
    gpg-agent --daemon 2>/dev/null
    export GPG_TTY=$(tty)
fi

# Set prompt
[ -f "$HOME/.git-prompt.sh" ] && . "$HOME/.git-prompt.sh"
GIT_PS1_SHOWDIRTYSTATE=1
__jobs() { if test "$(jobs -p | wc -l | tr -d ' ')" != "0"; then echo "&"; fi }
PS1='[\W$(__git_ps1 " (%s)")$(__jobs)]\$ '

# Include alias definitions
[ -f "$HOME/.bash_aliases" ] && . "$HOME/.bash_aliases"

# Source local settings if present
[ -f "$HOME/.bashrc.local" ] && . "$HOME/.bashrc.local"

:
